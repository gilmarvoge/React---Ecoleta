{"version":3,"sources":["assets/logo.svg","pages/Home/index.tsx","services/api.ts","pages/CreatePoint/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["module","exports","Home","id","className","src","logo","alt","to","api","axios","create","baseURL","CreatePoint","useState","items","setItems","ufs","setUfs","initialPosition","setInitialPosition","name","email","whatsapp","formData","setFormData","selectedUf","setsSelectedUf","cities","setCities","selectedCity","setSelectedCity","selectedItems","setSelectedItems","selectedPosition","setSelectedPosition","history","useHistory","handleInputChange","event","target","value","a","preventDefault","uf","city","latitude","longitude","data","post","alert","push","useEffect","navigator","geolocation","getCurrentPosition","position","coords","get","then","response","ufInitials","map","sigla","municipio","nome","console","log","onSubmit","htmlFor","type","onChange","Map","center","zoom","onClick","latlng","lat","lng","TileLayer","attribution","url","Marker","key","item","findIndex","filteredItems","filter","handleSelectItem","includes","image_url","title","Routes","component","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d1f3bec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.47c4581a.svg\";","import React from 'react';\r\nimport { FiLogIn } from 'react-icons/fi';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.css';\r\nimport logo from '../../assets/logo.svg';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div id=\"page-home\">\r\n            <div className=\"content\">\r\n                <header>\r\n                    <img src={logo} alt=\"Ecoleta\" />\r\n                </header>\r\n                <main>\r\n                    <h1>Seu marketplace de coleta de res√≠duos</h1>\r\n                    <p>Ajudamos pessoas a encontrarem pontos de coleta de forma eficiente</p>\r\n                    <Link to=\"/create-point\">\r\n                        <span>\r\n                            <FiLogIn />\r\n                        </span>\r\n                        <strong>Cadastre um ponto de coleta</strong>\r\n                    </Link>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import axios from 'axios';\r\n\r\nconst api= axios.create({\r\n    baseURL:'http://localhost:3333'\r\n});\r\n\r\nexport default api;","import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { Map, TileLayer, Marker } from 'react-leaflet';\r\nimport { LeafletMouseEvent } from 'leaflet';\r\nimport axios from 'axios';\r\nimport api from '../../services/api';\r\n\r\nimport './styles.css';\r\n\r\nimport logo from '../../assets/logo.svg';\r\n\r\ninterface Item {\r\n    id: number,\r\n    title: string,\r\n    image_url: string,\r\n}\r\n\r\ninterface IBGEUFResponse {\r\n    sigla: string\r\n}\r\n\r\ninterface IBGEMunicipiosResponse {\r\n    nome: string\r\n}\r\n\r\nconst CreatePoint = () => {\r\n\r\n    const [items, setItems] = useState<Item[]>([]);\r\n    const [ufs, setUfs] = useState<string[]>([]);\r\n    const [initialPosition, setInitialPosition] = useState<[number, number]>([0, 0]);\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        whatsapp: '',\r\n    })\r\n    const [selectedUf, setsSelectedUf] = useState('0');\r\n    const [cities, setCities] = useState<string[]>([]);\r\n    const [selectedCity, setSelectedCity] = useState('0');\r\n    const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n    const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0, 0]);\r\n\r\n    const history=useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            const { latitude, longitude } = position.coords;\r\n\r\n            setInitialPosition([latitude, longitude]);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        api.get('items').then(response => {\r\n            setItems(response.data);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\r\n            const ufInitials = response.data.map(uf => uf.sigla);\r\n            setUfs(ufInitials);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedUf === '0')\r\n            return;\r\n\r\n\r\n        axios.get<IBGEMunicipiosResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\r\n            .then(response => {\r\n                const cities = response.data.map(municipio => municipio.nome);\r\n                console.log(cities)\r\n                setCities(cities);\r\n            })\r\n    }, [selectedUf]);\r\n\r\n    function handleSelectedUf(event: ChangeEvent<HTMLSelectElement>) {\r\n        const uf = event.target.value;\r\n        setsSelectedUf(uf);\r\n    }\r\n\r\n    function handleSelectedCity(event: ChangeEvent<HTMLSelectElement>) {\r\n        const municipio = event.target.value;\r\n        setSelectedCity(municipio);\r\n        console.log(municipio)\r\n    }\r\n\r\n    function handleMapClick(event: LeafletMouseEvent) {\r\n        setSelectedPosition([\r\n            event.latlng.lat,\r\n            event.latlng.lng\r\n        ])\r\n    }\r\n\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\r\n        const { name, value } = event.target;\r\n\r\n        setFormData({ ...formData, [name]: value })\r\n    }\r\n\r\n    function handleSelectItem(id: number) {\r\n        const alreadySelected = selectedItems.findIndex(item => item === id);\r\n\r\n        if (alreadySelected >= 0) {\r\n            const filteredItems = selectedItems.filter(item => item !== id);\r\n            setSelectedItems(filteredItems);\r\n        } else {\r\n            setSelectedItems([...selectedItems, id]);\r\n        }\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        const { name, email, whatsapp } = formData;\r\n        const uf = selectedUf;\r\n        const city = selectedCity;\r\n        const [latitude, longitude] = selectedPosition;\r\n        const items = selectedItems;\r\n\r\n        const data = {\r\n            name,\r\n            email,\r\n            whatsapp,\r\n            uf,\r\n            city,\r\n            latitude,\r\n            longitude,\r\n            items\r\n        }\r\n        await api.post('points', data);\r\n        alert('Ponto de coleta criado!');\r\n        history.push(\"/\");\r\n\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-create-point\">\r\n            <header>\r\n                <img src={logo} alt=\"Ecoleta\" />\r\n                <Link to=\"/\">\r\n                    <FiArrowLeft />\r\n                    Voltar para home\r\n               </Link>\r\n            </header>\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Cadastro do <br />ponto de coleta</h1>\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Dados</h2>\r\n                    </legend>\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Nome da entidade</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"whatsapp\">Whatsapp</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"whatsapp\"\r\n                                id=\"whatsapp\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Endere√ßo</h2>\r\n                        <span>Selecione o endere√ßo no mapa</span>\r\n                    </legend>\r\n                    <Map center={initialPosition} zoom={15} onClick={handleMapClick}>\r\n                        <TileLayer\r\n                            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker position={selectedPosition} />\r\n                    </Map>\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"uf\">Estado (UF)</label>\r\n                            <select\r\n                                name=\"uf\"\r\n                                id=\"uf\"\r\n                                value={selectedUf}\r\n                                onChange={handleSelectedUf}\r\n                            >\r\n                                <option value=\"0\">Selecione uma UF</option>\r\n                                {ufs.map(uf =>\r\n                                    (\r\n                                        <option key={uf} value={uf}>{uf}</option>\r\n                                    ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"cities\">Cidade</label>\r\n                            <select\r\n                                name=\"cities\"\r\n                                id=\"cities\"\r\n                                value={selectedCity}\r\n                                onChange={handleSelectedCity}\r\n                            >\r\n                                <option value=\"0\">Selecione uma cidade</option>\r\n                                {cities.map(city =>\r\n                                    (\r\n                                        <option key={city} value={city}>{city}</option>\r\n                                    ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>√çtens de coleta</h2>\r\n                        <span>Selecione um ou mais √≠tens abaixo</span>\r\n                    </legend>\r\n                    <ul className=\"items-grid\">\r\n                        {items.map(item => (\r\n                            <li\r\n                                key={item.id}\r\n                                onClick={() => handleSelectItem(item.id)}\r\n                                className={selectedItems.includes(item.id) ? 'selected' : ''}\r\n\r\n                            >\r\n                                <img src={item.image_url} alt=\"teste\" />\r\n                                <span>{item.title}</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </fieldset>\r\n                <button type=\"submit\">\r\n                    Cadastrar ponto de coleta\r\n                </button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePoint;","import React from 'react';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport CreatePoint from './pages/CreatePoint';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Route component={Home}  path=\"/\" exact/>\r\n            <Route component={CreatePoint} path=\"/create-point\" />\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\n\nimport Header from './Header';\n\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <div>\n      < Routes  />\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}